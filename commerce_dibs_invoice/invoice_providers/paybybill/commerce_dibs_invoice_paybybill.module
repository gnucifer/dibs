<?php
/**
 * Implements hook_commerce_payment_method_info().
 */
function commerce_dibs_invoice_paybybill_commerce_payment_method_info() {
  $payment_methods = array();
  $payment_methods['commerce_dibs_invoice_paybybill'] = array(
    'title' => t('DIBS invoice PayByBill'),
    'description' => t('Invoice payment using the DIBS PayByBill provider.'),
    'display_title' => t('DIBS Payment PayByBill'),
    'offsite' => TRUE,
  );

  return $payment_methods;
}

/**
 * Payment method callback: settings form.
 */
function commerce_dibs_invoice_paybybill_settings_form($settings = NULL) {
  $form = array();
  $form['info']['#markup'] = l(t('Setup commerce dibs invoice'), 'admin/config/payment/dibs/edit/commerce_dibs_invoice_paybybill/commerce_dibs_invoice_paybybill');
  $form['invoice_fee'] = array(
    '#type' => 'textfield',
    '#title' => t('Invoice fee'),
    '#description' => t('Invoice fee (expressed in minor unit of currency). Leave blank for no invoice fee.'),
    '#default_value' => isset($settings['invoice_fee']) ? $settings['invoice_fee'] : NULL,
  );
  $form['invoice_fee_vat'] = array(
    '#type' => 'textfield',
    '#title' => t('Invoice fee VAT'),
    '#description' => t('Invoice Fee VAT (e.g. "25%" is expressed as "2500"), must be set if invoiceFee is present.'),
    '#default_value' => isset($settings['invoice_fee_vat']) ? $settings['invoice_fee_vat'] : NULL,
  );
  $form['enable_comments'] = array(
    '#type' => 'checkbox',
    '#title' => t('Enable customer comments'),
    '#default_value' => isset($settings['enable_comments']) ? $settings['enable_comments'] : NULL,
  );

  return $form;
}

/**
 * Payment method callback: submit form.
 */

function commerce_dibs_invoice_paybybill_submit_form($payment_method, $pane_values, $checkout_pane, $order) {
  $settings = $payment_method['settings'];
  $form = array();
  $form['social_security_number'] = array(
    '#type' => 'textfield',
    '#title' => t('Social security number'),
    //'#description' => print_r($payment_method, TRUE),
  );

 $form['organization_number'] = array(
    '#type' => 'textfield',
    '#title' => t('Organization number'),
  );

  if($settings['enable_comments']) {
    $form['comments'] = array(
      '#type' => 'textarea',
      '#title' => t('Message'),
    );
  }
  return $form;
}

/**
 * Payment method callback: redirect form, a wrapper around the module's general
 *   use function for building a WPS form.
 */

function commerce_dibs_invoice_paybybill_redirect_form($form, &$form_state, $order, $payment_method) {
  $order_wrapper = entity_metadata_wrapper('commerce_order', $order);
  $dibs_params = _commerce_dibs_commerce_order_dibs_data($order_wrapper);
  $data = _commerce_dibs_dibs_transaction_data($order, 'commerce_dibs_invoice_paybybill', 'commerce_dibs_invoice_paybybill');

  $data['params'] += $dibs_params;

  // Prepare the DIBS payment
  $hash = dibs_payment_prepare($data, FALSE);
  $dibs_transaction = dibs_transaction_hash_load($hash);

  // Prepare the commerce transaction
  $transaction = _commerce_dibs_commerce_transaction($order_wrapper, $payment_method, $dibs_transaction['tid']);

  $settings = dibs_load_settings('commerce_dibs_invoice_paybybill', 'commerce_dibs_invoice_paybybill');
  $settings['auto_submit'] = 1;

  module_load_include('inc', 'dibs', 'dibs.frontend');

  return drupal_get_form('dibs_frontend_redirect_form', $settings, $dibs_transaction);
}

